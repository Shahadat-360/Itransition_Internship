@model IEnumerable<FormsApp.ViewModels.FormResponseViewModel>

@{
    ViewData["Title"] = "My Responses";
}

<div class="container">
    <h1 class="mb-4">@ViewData["Title"]</h1>
    
    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <p class="mb-0">You haven't submitted any form responses yet.</p>
        </div>
    }
    else
    {
        <!-- Toolbar with search and bulk actions -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Responses</h5>
                <div class="d-flex">
                    <input type="text" id="responseSearch" class="form-control form-control-sm me-2" placeholder="Search responses..." />
                    <button class="btn btn-sm btn-outline-danger" type="button" id="bulkDeleteBtn">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            </div>
            
            <div class="card-body p-0">
                <form id="responseForm">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="selectAll">
                                        </div>
                                    </th>
                                    <th>Form</th>
                                    <th>Creator</th>
                                    <th>Submitted</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var response in Model)
                                {
                                    <tr class="response-row" data-id="@response.Id" data-name="@response.TemplateName">
                                        <td>
                                            <div class="form-check">
                                                <input class="form-check-input response-checkbox" type="checkbox" value="@response.Id" name="selectedResponses">
                                            </div>
                                        </td>
                                        <td class="clickable" onclick="location.href='@Url.Action("Details", new { id = response.Id })'">@response.TemplateName</td>
                                        <td class="clickable" onclick="location.href='@Url.Action("Details", new { id = response.Id })'">@response.CreatorName</td>
                                        <td class="clickable" onclick="location.href='@Url.Action("Details", new { id = response.Id })'">@response.SubmittedAt.ToLocalTime().ToString("g")</td>
                                        <td class="clickable" onclick="location.href='@Url.Action("Details", new { id = response.Id })'"></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
        </div>
    }
</div>

<!-- Delete Response Modal -->
<div class="modal fade" id="deleteResponseModal" tabindex="-1" aria-labelledby="deleteResponseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteResponseModalLabel">Delete Response</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete your response to "<span id="formName"></span>"? This cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="Delete" method="post" id="deleteForm">
                    <input type="hidden" name="id" id="deleteId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Delete Modal -->
<div class="modal fade" id="bulkDeleteModal" tabindex="-1" aria-labelledby="bulkDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bulkDeleteModalLabel">Delete Selected Responses</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <span id="deleteCount"></span> selected responses? This cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="DeleteSelected" method="post" id="bulkDeleteForm">
                    <div id="selectedIdsContainer"></div>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set up delete modal
        const deleteModal = document.getElementById('deleteResponseModal');
        deleteModal.addEventListener('show.bs.modal', function(event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const name = button.getAttribute('data-name');
            
            document.getElementById('formName').textContent = name;
            document.getElementById('deleteId').value = id;
        });
        
        // Set up search functionality
        document.getElementById('responseSearch').addEventListener('keyup', function() {
            const searchValue = this.value.toLowerCase();
            const rows = document.querySelectorAll('.response-row');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                if (text.includes(searchValue)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
        
        // Select all checkbox
        document.getElementById('selectAll').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.response-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });
        
        // Individual delete buttons
        document.querySelectorAll('.delete-response-btn').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const name = this.getAttribute('data-name');
                
                const modal = new bootstrap.Modal(document.getElementById('deleteResponseModal'));
                document.getElementById('formName').textContent = name;
                document.getElementById('deleteId').value = id;
                modal.show();
            });
        });
        
        // Bulk delete functionality
        document.getElementById('bulkDeleteBtn').addEventListener('click', function(e) {
            e.preventDefault();
            
            const selectedCheckboxes = document.querySelectorAll('.response-checkbox:checked');
            if (selectedCheckboxes.length === 0) {
                alert('Please select at least one response to delete.');
                return;
            }
            
            // Update modal with count
            document.getElementById('deleteCount').textContent = selectedCheckboxes.length;
            
            // Add selected IDs to form
            const container = document.getElementById('selectedIdsContainer');
            container.innerHTML = '';
            selectedCheckboxes.forEach(checkbox => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'selectedResponses';
                input.value = checkbox.value;
                container.appendChild(input);
            });
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('bulkDeleteModal'));
            modal.show();
        });
        
        // Style for clickable rows
        document.querySelectorAll('.clickable').forEach(cell => {
            cell.style.cursor = 'pointer';
        });
    </script>
    
    <style>
        .clickable:hover {
            background-color: rgba(0,0,0,0.05);
        }
    </style>
} 