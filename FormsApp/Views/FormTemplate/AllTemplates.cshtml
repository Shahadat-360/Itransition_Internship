@model List<FormsApp.ViewModels.FormTemplateViewModel>

@{
    ViewData["Title"] = "All Templates";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>All Available Templates</h1>
    </div>
    
    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <p class="mb-0">No templates available in the system.</p>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Templates</h5>
            </div>
            <div class="card-body">
                <!-- Toolbar -->
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div>
                        <button id="deleteSelectedBtn" class="btn btn-danger btn-sm me-2" disabled>
                            <i class="bi bi-trash me-1"></i> Delete Selected
                        </button>
                        <div class="btn-group">
                            <button type="button" id="currentFilter" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" data-current-filter="all">
                                <i class="bi bi-funnel me-1"></i> All Templates
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" data-filter="all">All Templates</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="public">Public Templates</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="private">Private Templates</a></li>
                            </ul>
                        </div>
                    </div>
                    <div>
                        <div class="input-group">
                            <input type="text" id="templateSearch" class="form-control form-control-sm" placeholder="Search templates...">
                            <button class="btn btn-outline-secondary btn-sm" type="button">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <form id="bulkActionForm" method="post">
                    <input type="hidden" name="returnUrl" value="@Url.Action("AllTemplates", "FormTemplate")" />
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>
                                        <input type="checkbox" id="selectAll" class="form-check-input">
                                    </th>
                                    <th>Image</th>
                                    <th>Title</th>
                                    <th>Creator</th>
                                    <th>Created</th>
                                    <th>Status</th>
                                    <th>Likes</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var template in Model)
                                {
                                    <tr class="template-row" data-status="@(template.IsPublic ? "public" : "private")" data-id="@template.Id" style="cursor: pointer;">
                                        <td onclick="event.stopPropagation();">
                                            <input type="checkbox" name="selectedTemplates" value="@template.Id" class="form-check-input template-checkbox">
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(template.ImageUrl))
                                            {
                                                <img src="@template.ImageUrl" alt="@template.Title" style="width: 60px; height: 60px; object-fit: cover;" class="rounded">
                                            }
                                            else
                                            {
                                                <div class="bg-light d-flex align-items-center justify-content-center rounded" style="width: 60px; height: 60px;">
                                                    <i class="bi bi-file-earmark-text text-secondary" style="font-size: 1.5rem;"></i>
                                                </div>
                                            }
                                        </td>
                                        <td>
                                            <span class="fw-bold">@template.Title</span>
                                            <div class="small text-muted text-truncate" style="max-width: 200px;">@template.Description</div>
                                        </td>
                                        <td>@template.CreatorName</td>
                                        <td>@template.CreatedAt.ToShortDateString()</td>
                                        <td>
                                            <span class="badge @(template.IsPublic ? "bg-success" : "bg-secondary")">
                                                @(template.IsPublic ? "Public" : "Private")
                                            </span>
                                        </td>
                                        <td>
                                            <span class="badge bg-light text-dark">
                                                <i class="bi bi-heart-fill text-danger me-1"></i> @template.LikesCount
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
        </div>
    }
</div>

<!-- Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="deleteModalText">Are you sure you want to delete these templates?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Set initial filter state
            var currentFilter = "all";
            
            // Make rows clickable
            $(".template-row").click(function() {
                var templateId = $(this).data("id");
                window.location.href = "@Url.Action("Details", "FormTemplate")/" + templateId;
            });
            
            // Select all functionality
            $("#selectAll").change(function() {
                $(".template-checkbox").prop('checked', $(this).prop('checked'));
                updateButtonState();
            });
            
            // Individual checkbox change
            $(".template-checkbox").change(function() {
                updateButtonState();
            });
            
            // Search functionality that respects current filter
            $("#templateSearch").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                
                // Show all rows that match the current filter
                if (currentFilter === "all") {
                    $(".template-row").filter(function() {
                        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                    });
                } else {
                    // Only search within the current filter
                    $(".template-row").hide();
                    $(".template-row[data-status='" + currentFilter + "']").filter(function() {
                        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                    });
                }
            });
            
            // Update button state based on selections
            function updateButtonState() {
                var anyChecked = $(".template-checkbox:checked").length > 0;
                $("#deleteSelectedBtn").prop("disabled", !anyChecked);
            }
            
            // Filter dropdown
            $("[data-filter]").click(function(e) {
                e.preventDefault();
                currentFilter = $(this).data("filter");
                
                // Update filter button text
                var filterText = $(this).text();
                $("#currentFilter").html('<i class="bi bi-funnel me-1"></i> ' + filterText);
                $("#currentFilter").attr("data-current-filter", currentFilter);
                
                // Apply search within the new filter
                var searchValue = $("#templateSearch").val().toLowerCase();
                
                if (currentFilter === "all") {
                    // Show all first, then apply search
                    $(".template-row").show();
                    if (searchValue) {
                        $(".template-row").filter(function() {
                            $(this).toggle($(this).text().toLowerCase().indexOf(searchValue) > -1);
                        });
                    }
                } else {
                    // Hide all, then show only rows matching filter and search
                    $(".template-row").hide();
                    if (searchValue) {
                        $(".template-row[data-status='" + currentFilter + "']").filter(function() {
                            $(this).toggle($(this).text().toLowerCase().indexOf(searchValue) > -1);
                        });
                    } else {
                        $(".template-row[data-status='" + currentFilter + "']").show();
                    }
                }
            });
            
            // Delete button action
            $("#deleteSelectedBtn").click(function() {
                $("#deleteModalText").text("Are you sure you want to delete all selected templates? This action cannot be undone.");
                var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
                deleteModal.show();
            });
            
            // Confirm delete button
            $("#confirmDeleteBtn").click(function() {
                $("#bulkActionForm").attr("action", "@Url.Action("BatchDelete", "FormTemplate")").submit();
            });
        });
    </script>
}