@model FormsApp.ViewModels.SupportTicketViewModel

@{
    ViewData["Title"] = "Create Support Ticket";
    var returnUrl = ViewData["ReturnUrl"] as string;
    var fileRequestUrl = TempData["FileRequestUrl"] as string;
    var successMessage = TempData["SuccessMessage"] as string;
}

<div class="container">
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Success!</strong> @successMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        
        @if (!string.IsNullOrEmpty(fileRequestUrl))
        {
            <div class="alert alert-info">
                <p>You can upload additional files related to your ticket using this link:</p>
                <a href="@fileRequestUrl" target="_blank" class="btn btn-primary">Upload Additional Files</a>
                <p class="mt-2 small text-muted">This link will be available for 30 days.</p>
            </div>
        }
    }

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">Create Support Ticket</h2>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" name="returnUrl" value="@returnUrl" />
                        
                        <div class="mb-3">
                            <label asp-for="Summary" class="form-label">Summary</label>
                            <input asp-for="Summary" class="form-control" placeholder="Brief description of the issue" />
                            <span asp-validation-for="Summary" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Priority" class="form-label">Priority</label>
                            <select asp-for="Priority" class="form-select">
                                <option value="">-- Select Priority --</option>
                                <option value="High">High</option>
                                <option value="Average">Average</option>
                                <option value="Low">Low</option>
                            </select>
                            <span asp-validation-for="Priority" class="text-danger"></span>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(Model.Template))
                        {
                            <div class="mb-3">
                                <label class="form-label">Template</label>
                                <input type="text" value="@Model.Template" class="form-control" readonly />
                                <input type="hidden" asp-for="Template" />
                            </div>
                        }
                        
                        <div class="d-flex justify-content-between mt-4">
                            <a href="@returnUrl" class="btn btn-secondary">Cancel</a>
                            <button type="submit" class="btn btn-primary">Submit Ticket</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 