@Html.AntiForgeryToken()
@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "Home Page";
}
<div class="container-fluid p-3 bg-light">
    <!-- Action buttons and filter row -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <button class="btn btn-outline-primary me-1 btn-fun">
                <i class="bi bi-lock-fill" id="block-btn"></i> Block
            </button>
            <button class="btn btn-outline-primary me-1 btn-fun">
                <i class="bi-unlock-fill" id="unblock-btn"></i>
            </button>
            <button class="btn btn-outline-danger btn-fun">
                <i class="bi bi-trash" id="delete-btn"></i>
            </button>
            <button class="btn btn-outline-danger btn-fun">
                <i class="bi bi-box-arrow-right" id="logout-btn"></i>
            </button>
        </div>
        <div>
            <input type="text" class="form-control" id="filterInput" placeholder="Filter">
        </div>
    </div>
    <!-- Table container -->
    <div class="bg-white rounded">
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead>
                    <tr>
                        <th width="50px">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="selectAll">
                            </div>
                        </th>
                        <th>Name</th>
                        <th>Email <i class="bi bi-arrow-down-short text-secondary"></i></th>
                        <th>Last seen</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>
                                <div class="form-check">
                                    <input class="form-check-input user-checkbox" data-email="@user.Email" type="checkbox" @(user.IsSelected ? "checked" : "")>
                                </div>
                            </td>
                            <td>
                                <div class="@(user.IsActive == false ? "struck-text opacity-change " : "")">@user.FirstName @user.LastName</div>
                                <div class="@(user.IsActive == false ? " opacity-change " : "") job-title">@(string.IsNullOrEmpty(user.JobTitle) ? "N/A" : user.JobTitle)</div>
                            </td>
                            <td class="@(user.IsActive == false ? " opacity-change " : "")">@user.Email</td>
                            <td>
                                <div class="@(user.IsActive == false ? " opacity-change " : "")">@user.LastSeenText</div>
                                <div class="mt-1 activity-container" data-active="@(user.IsActive.ToString().ToLower())"></div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
